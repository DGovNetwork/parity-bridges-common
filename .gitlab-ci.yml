stages:
  - lint
  - check
  - test
  - build
  - publish

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

variables:                         &default-vars
  GIT_STRATEGY:                    fetch
  GIT_DEPTH:                       100
  CARGO_INCREMENTAL:               0
  ARCH:                            "x86_64"
  CI_IMAGE:                        "paritytech/bridges-ci:latest"

default:
  cache:                           {}

.collect-artifacts:                &collect-artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     7 days
    paths:
      - artifacts/

.kubernetes-build:                 &kubernetes-build
  tags:
    - kubernetes-parity-build
  interruptible:                   true

.docker-env:                       &docker-env
  image:                           "${CI_IMAGE}"
  before_script:
    - rustup show
    - cargo --version
    - sccache -s
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  interruptible:                   true
  tags:
    - linux-docker

#### stage:                        lint

clippy-nightly:
  stage:                           lint
  <<:                              *docker-env
  variables:
    RUSTFLAGS:                     "-D warnings"
  script:
    - cargo +nightly clippy --all-targets

fmt:
  stage:                           lint
  <<:                              *docker-env
  script:
    - cargo fmt --all -- --check

spellcheck:
  stage:                           lint
  <<:                              *docker-env
  script:
    - cargo spellcheck check -m 1 -vv $(find modules/currency-exchange/src -name "*.rs")

#### stage:                        check

check:
  stage:                           check
  <<:                              *docker-env
  script:                          &check-script
    - cargo check --verbose --workspace
    # Check Rialto benchmarks runtime
    - cargo check -p rialto-runtime --features runtime-benchmarks --verbose
    # Check Millau benchmarks runtime
    - cargo check -p millau-runtime --features runtime-benchmarks --verbose

check-nightly:
  stage:                           check
  <<:                              *docker-env
  script:
    - rustup default nightly
    - *check-script
    
#### stage:                        test

test:
  stage:                           test
  <<:                              *docker-env
  script:                          &test-script
    - cargo test --verbose --workspace

test-nightly:
  stage:                           test
  <<:                              *docker-env
  script:
    - rustup default nightly
    - *test-script
    

deny:
  stage:                           test
  <<:                              *docker-env
  script:
    - cargo deny advisories bans licenses sources


#### stage:                        build

build:
  stage:                           build
  <<:                              *docker-env
  <<:                              *collect-artifacts
  # master
  script:                          &build-script
    - cargo build --verbose --workspace
    # Prepare artifacts
    - mkdir -p ./artifacts;
    - mv -v target/debug/rialto-bridge-node ./artifacts/
    - mv -v target/debug/millau-bridge-node ./artifacts/
    - mv -v target/debug/ethereum-poa-relay ./artifacts/
    - mv -v target/debug/substrate-relay ./artifacts/

build-nightly:
  stage:                           build
  <<:                              *docker-env
  <<:                              *collect-artifacts
  # master
  script:
    - rustup default nightly
    - *build-script
    
#### stage:                        publish